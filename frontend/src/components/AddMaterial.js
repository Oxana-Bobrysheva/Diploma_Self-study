import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { getCourseDetails, addMaterial } from '../services/api';
import { isAuthenticated, clearTokens } from '../utils/auth';

const AddMaterial = () => {
  const { courseId } = useParams();
  const navigate = useNavigate();
  const [title, setTitle] = useState('');
  const [courseTitle, setCourseTitle] = useState('');
  const [courseOwner, setCourseOwner] = useState(null);
  const [content, setContent] = useState('');
  const [illustration, setIllustration] = useState(null);
  const [videoLink, setVideoLink] = useState('');
  const [error, setError] = useState('');
  const [loading, setLoading] = useState(false);
  const [courseLoading, setCourseLoading] = useState(true);
  const [userInfo, setUserInfo] = useState({ id: '', role: '' });

  useEffect(() => {
    const fetchCourse = async () => {
      if (!isAuthenticated()) {
        setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —ç—Ç–æ–≥–æ –∫—É—Ä—Å–∞.');
        navigate('/login');
        return;
      }

      setCourseLoading(true);
      setError('');
      try {
        console.log('üîÑ Fetching course details for course ID:', courseId);
        const response = await getCourseDetails(courseId);
        console.log('‚úÖ Course API Response:', response.data);

        const courseData = response.data;

        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ —Ç–æ–∫–µ–Ω–∞
        const token = localStorage.getItem('access_token');
        if (token) {
          try {
            const payload = JSON.parse(atob(token.split('.')[1]));
            setUserInfo({
              id: payload.user_id,
              role: payload.role || 'student'
            });
            console.log('üë§ Current user:', payload);
          } catch (e) {
            console.error('‚ùå Error parsing token:', e);
          }
        }

        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ –∫—É—Ä—Å–∞
        const owner = courseData.owner;
        setCourseOwner(owner);
        console.log('üë®‚Äçüè´ Course owner:', owner);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
        if (owner && owner.id !== userInfo.id && userInfo.role !== 'admin') {
          setError('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∫ —ç—Ç–æ–º—É –∫—É—Ä—Å—É. –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∫—É—Ä—Å–∞ –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–≥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã.');
        }

        // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞
        const foundTitle = courseData.title || courseData.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫—É—Ä—Å';
        setCourseTitle(foundTitle);

      } catch (err) {
        console.error('‚ùå Fetch course error:', err);

        if (err.response?.status === 404) {
          setError('–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ ID –∫—É—Ä—Å–∞.');
        } else if (err.response?.status === 401) {
          setError('–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞.');
          clearTokens();
          navigate('/login');
        } else if (err.response?.status === 403) {
          setError('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —ç—Ç–æ–≥–æ –∫—É—Ä—Å–∞.');
        } else {
          const detail = err.response?.data?.detail ||
                        err.response?.data?.message ||
                        err.message ||
                        '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä—Å–µ.';
          setError(detail);
        }
      } finally {
        setCourseLoading(false);
      }
    };

    if (courseId) {
      fetchCourse();
    } else {
      setError('ID –∫—É—Ä—Å–∞ –Ω–µ —É–∫–∞–∑–∞–Ω.');
      setCourseLoading(false);
    }
  }, [courseId, navigate, userInfo.id]);

  const checkPermissions = () => {
    // –ê–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –≤—Å—ë
    if (userInfo.role === 'admin') return true;

    // –í–ª–∞–¥–µ–ª—å—Ü—ã –∫—É—Ä—Å–∞ –º–æ–≥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã
    if (courseOwner && courseOwner.id === userInfo.id) return true;

    // –£—á–∏—Ç–µ–ª—è –º–æ–≥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∫ —Å–≤–æ–∏–º –∫—É—Ä—Å–∞–º
    if (userInfo.role === 'teacher' && courseOwner && courseOwner.id === userInfo.id) return true;

    return false;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    if (!checkPermissions()) {
      setError('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∫ —ç—Ç–æ–º—É –∫—É—Ä—Å—É. –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∫—É—Ä—Å–∞ –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–≥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã.');
      return;
    }

    if (!title.trim()) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞.');
      return;
    }

    const formData = new FormData();
    formData.append('title', title);
    formData.append('content', content || '');
    if (illustration) {
      formData.append('illustration', illustration);
      console.log('üìé Added illustration file:', illustration.name);
    }
    formData.append('video_link', videoLink || '');

    // –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log('üì§ Submitting form data:');
    for (let [key, value] of formData.entries()) {
      console.log(`  ${key}:`, value);
    }

    setLoading(true);
    setError('');

    try {
      console.log('üîÑ Adding material for course', courseId);
      const response = await addMaterial(courseId, formData);
      console.log('‚úÖ Material added successfully:', response.data);
      alert('–ú–∞—Ç–µ—Ä–∏–∞–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω! üéâ');

      // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
      setTitle('');
      setContent('');
      setIllustration(null);
      setVideoLink('');

      // –í–æ–∑–≤—Ä–∞—Ç –∫ –¥–µ—Ç–∞–ª—è–º –∫—É—Ä—Å–∞
      navigate(`/courses/${courseId}`);
    } catch (err) {
      console.error('‚ùå Add material error:', err);
      console.error('Error response:', err.response);

      let errorMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª. ';

      if (err.response?.status === 401) {
        errorMessage += '–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞.';
        clearTokens();
        navigate('/login');
      } else if (err.response?.status === 403) {
        errorMessage += '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∫ —ç—Ç–æ–º—É –∫—É—Ä—Å—É. –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∫—É—Ä—Å–∞ –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–≥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã.';
      } else if (err.response?.data) {
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ Django
        const errorData = err.response.data;
        if (typeof errorData === 'object') {
          const validationErrors = [];
          for (const [field, messages] of Object.entries(errorData)) {
            validationErrors.push(`${field}: ${Array.isArray(messages) ? messages.join(', ') : messages}`);
          }
          errorMessage += validationErrors.join('; ');
        } else {
          errorMessage += errorData.detail || errorData.message || JSON.stringify(errorData);
        }
      } else {
        errorMessage += '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.';
      }

      setError(errorMessage);
    } finally {
      setLoading(false);
    }
  };

  // –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–µ
  if (courseLoading) {
    return (
      <div style={{
        minHeight: '100vh',
        background: 'linear-gradient(to bottom, #FFF9E6, #FFEFD5)',
        padding: '20px',
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
        justifyContent: 'center'
      }}>
        <div className="spinner" style={{ marginBottom: '20px' }}></div>
        <p style={{ fontSize: '18px', color: '#666' }}>–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—É—Ä—Å–µ...</p>
      </div>
    );
  }

  const hasPermission = checkPermissions();

  return (
    <div style={{
      minHeight: '100vh',
      background: 'linear-gradient(to bottom, #FFF9E6, #FFEFD5)',
      padding: '20px'
    }}>
      {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ */}
      <button
        onClick={() => navigate(`/courses/${courseId}`)}
        style={{
          backgroundColor: '#6c757d',
          color: 'white',
          border: 'none',
          padding: '10px 20px',
          borderRadius: '5px',
          marginBottom: '20px',
          cursor: 'pointer',
          fontSize: '16px'
        }}
      >
        ‚Üê –ù–∞–∑–∞–¥ –∫ –∫—É—Ä—Å—É
      </button>

      <div style={{
        maxWidth: '800px',
        margin: '0 auto',
        backgroundColor: 'white',
        padding: '30px',
        borderRadius: '8px',
        boxShadow: '0 4px 12px rgba(0,0,0,0.1)'
      }}>
        <h1 style={{
          color: 'green',
          textAlign: 'center',
          marginBottom: '10px',
          fontSize: '28px'
        }}>
          –î–æ–±–∞–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª
        </h1>

        <div style={{
          textAlign: 'center',
          marginBottom: '30px',
          padding: '15px',
          backgroundColor: '#f8f9fa',
          borderRadius: '6px',
          border: '1px solid #e9ecef'
        }}>
          <h2 style={{
            color: '#495057',
            margin: '0',
            fontSize: '20px'
          }}>
            –ö—É—Ä—Å: <span style={{ color: 'green', fontWeight: 'bold' }}>{courseTitle}</span>
          </h2>
          {courseOwner && (
            <p style={{
              color: '#6c757d',
              margin: '5px 0 0 0',
              fontSize: '14px'
            }}>
              –í–ª–∞–¥–µ–ª–µ—Ü –∫—É—Ä—Å–∞: {courseOwner.name || courseOwner.email} (ID: {courseOwner.id}) |
              –í–∞—à–∞ —Ä–æ–ª—å: {userInfo.role} | –í–∞—à ID: {userInfo.id}
            </p>
          )}
        </div>

        {!hasPermission && (
          <div style={{
            color: '#856404',
            backgroundColor: '#fff3cd',
            padding: '15px',
            borderRadius: '4px',
            marginBottom: '20px',
            textAlign: 'center',
            border: '1px solid #ffeaa7'
          }}>
            <strong>–í–Ω–∏–º–∞–Ω–∏–µ:</strong> –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∫ —ç—Ç–æ–º—É –∫—É—Ä—Å—É.
            –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∫—É—Ä—Å–∞ –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–≥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã.
          </div>
        )}

        <form onSubmit={handleSubmit}>
          <div style={{ marginBottom: '20px' }}>
            <label style={{ display: 'block', marginBottom: '8px', fontWeight: 'bold', color: '#495057' }}>
              –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞: *
            </label>
            <input
              type="text"
              value={title}
              onChange={(e) => setTitle(e.target.value)}
              required
              disabled={!hasPermission || loading}
              style={{
                width: '100%',
                padding: '12px',
                border: '1px solid #ddd',
                borderRadius: '4px',
                fontSize: '16px',
                boxSizing: 'border-box',
                opacity: hasPermission ? 1 : 0.6
              }}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞"
            />
          </div>

          <div style={{ marginBottom: '20px' }}>
            <label style={{ display: 'block', marginBottom: '8px', fontWeight: 'bold', color: '#495057' }}>
              –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:
            </label>
            <textarea
              value={content}
              onChange={(e) => setContent(e.target.value)}
              rows="6"
              disabled={!hasPermission || loading}
              style={{
                width: '100%',
                padding: '12px',
                border: '1px solid #ddd',
                borderRadius: '4px',
                fontSize: '16px',
                resize: 'vertical',
                boxSizing: 'border-box',
                fontFamily: 'inherit',
                opacity: hasPermission ? 1 : 0.6
              }}
              placeholder="–û–ø–∏—à–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞..."
            />
          </div>

          <div style={{ marginBottom: '20px' }}>
            <label style={{ display: 'block', marginBottom: '8px', fontWeight: 'bold', color: '#495057' }}>
              –ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è:
            </label>
            <input
              type="file"
              accept="image/*"
              onChange={(e) => {
                const file = e.target.files[0];
                setIllustration(file);
                console.log('üìÅ Selected file:', file);
              }}
              disabled={!hasPermission || loading}
              style={{
                width: '100%',
                padding: '10px',
                border: '1px solid #ddd',
                borderRadius: '4px',
                boxSizing: 'border-box',
                opacity: hasPermission ? 1 : 0.6
              }}
            />
            <small style={{ color: '#666', display: 'block', marginTop: '5px' }}>
              –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: JPG, PNG, GIF, WEBP (–º–∞–∫—Å. 5MB)
            </small>
          </div>

          <div style={{ marginBottom: '30px' }}>
            <label style={{ display: 'block', marginBottom: '8px', fontWeight: 'bold', color: '#495057' }}>
              –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ:
            </label>
            <input
              type="url"
              value={videoLink}
              onChange={(e) => setVideoLink(e.target.value)}
              placeholder="https://www.youtube.com/watch?v=..."
              disabled={!hasPermission || loading}
              style={{
                width: '100%',
                padding: '12px',
                border: '1px solid #ddd',
                borderRadius: '4px',
                fontSize: '16px',
                boxSizing: 'border-box',
                opacity: hasPermission ? 1 : 0.6
              }}
            />
          </div>

          {error && (
            <div style={{
              color: '#dc3545',
              backgroundColor: '#f8d7da',
              padding: '15px',
              borderRadius: '4px',
              marginBottom: '20px',
              textAlign: 'center',
              border: '1px solid #f5c6cb'
            }}>
              <strong>–û—à–∏–±–∫–∞:</strong> {error}
            </div>
          )}

          <div style={{ display: 'flex', gap: '15px', justifyContent: 'center', flexWrap: 'wrap' }}>
            <button
              type="submit"
              disabled={!hasPermission || loading}
              style={{
                backgroundColor: !hasPermission ? '#6c757d' : (loading ? '#6c757d' : '#28a745'),
                color: 'white',
                border: 'none',
                padding: '12px 30px',
                borderRadius: '5px',
                cursor: (hasPermission && !loading) ? 'pointer' : 'not-allowed',
                fontSize: '16px',
                minWidth: '160px'
              }}
            >
              {loading ? (
                <>
                  <div className="spinner" style={{
                    width: '20px',
                    height: '20px',
                    display: 'inline-block',
                    marginRight: '8px',
                    borderWidth: '2px'
                  }}></div>
                  –î–æ–±–∞–≤–ª–µ–Ω–∏–µ...
                </>
              ) : (
                hasPermission ? '–î–æ–±–∞–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª' : '–ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞'
              )}
            </button>

            <button
              type="button"
              onClick={() => navigate(`/courses/${courseId}`)}
              disabled={loading}
              style={{
                backgroundColor: '#6c757d',
                color: 'white',
                border: 'none',
                padding: '12px 30px',
                borderRadius: '5px',
                cursor: loading ? 'not-allowed' : 'pointer',
                fontSize: '16px',
                minWidth: '120px'
              }}
            >
              –û—Ç–º–µ–Ω–∏—Ç—å
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default AddMaterial;